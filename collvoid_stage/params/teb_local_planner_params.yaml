TebLocalPlannerROS:
  odom_topic: odom

  # Trajectory

  teb_autosize: true
  dt_ref: 0.3                                # 0.3 所需的轨迹时间分辨率（轨迹未固定为 dt_ref，因为时间分辨率是优化的一部分，但如果违反 dt_ref +-dt_hysteresis，轨迹将在迭代之间调整大小
  dt_hysteresis: 0.1                         # 0.1 根据当前时间分辨率自动调整大小的滞后，通常约为。建议使用 dt_ref 的 10%
  max_samples: 500                           # 似乎是自己写的
  min_samples: 3                             # 3 最小采样率
  global_plan_overwrite_orientation: true    # true 覆盖由全局规划器提供的局部子目标的方向（因为它们通常仅提供2D路径）
  allow_init_with_backwards_motion: false
  global_plan_viapoint_sep: -1               # -0.1(disable) 如果是正值，则从全局计划中提取途经点（路径跟踪模式）
                                             # 该值确定参考路径的分辨率（沿全局规划的每两个连续经由点之间的最小间隔)
  max_global_plan_lookahead_dist: 2.5        # 3.0 指定考虑优化的全局计划子集的最大长度（累积欧几里德距离）。实际长度由本地成本图大小和该最大界限的逻辑与确定。设置为零或负数以停用此限制
  global_plan_prune_distance: 1
  exact_arc_length: false                    # false 如果为真，则规划器在速度，加速度和角速度计算中使用确切的弧长度（ - >增加cpu运算时间）
  feasibility_check_no_poses: 4              # 4 指定每个采样间隔应检查预测计划上的哪个位姿的可行性
  publish_feedback: true                     # false 发布包含完整轨迹和动态障碍的列表的规划器反馈（应仅用于测试或调试启用)


  # Robot

  max_vel_x: 10.0                   # 0.5 x最大速度
  max_vel_x_backwards: 0.2         # 0.2 x向后的最大速度
  max_vel_y: 0.0                   # 0.0 y最大速度
  max_vel_theta: 30.0               # 0.3 最大角速度
  acc_lim_x: 0.6                   # 0.5 x最大加速度
  acc_lim_y: 0.0                   # 0.0 y最大加速度
  acc_lim_theta: 0.45              # 0.5 最大角加速度
  control_look_ahead_poses: 3
  min_turning_radius: 0.0          # 0.0 最小旋转半径 四驱车的配置
  wheelbase: 0.0                   # 1.0 后驱动轴与前驱动轴的距离
  cmd_angle_instead_rotvel: false  # stage simulator takes the angle instead of the rotvel as input (twist message)

  footprint_model:
    type: "polygon"
    vertices: [[0.25, 0.20], [-0.25, 0.20], [-0.25, -0.20], [0.25, -0.20]]  

  # GoalTolerance

  xy_goal_tolerance: 0.1           # 0.2
  yaw_goal_tolerance: 0.1          # 0.2
  free_goal_vel: False             # false 去除目标速度的约束，让机器可以最大速度抵达目标点
  complete_global_plan: True       # 和全局路径比较

  # Obstacles

  min_obstacle_dist: 0.50                                   # 0.5
  inflation_dist: 0.4                                       # 0.6 非零惩罚成本的障碍物周围的缓冲区（应大于 min_obstacle_dist 才能生效)
  include_costmap_obstacles: true                           # true 指定应否考虑到局部costmap的障碍，被标记为障碍物的每个单元格被认为是点障碍物（point-obstacle）。
  include_dynamic_obstacles: true
  dynamic_obstacle_inflation_dist: 0.6
  costmap_obstacles_behind_robot_dist: 1.5                  # 1.0 限制机器人后面规划时考虑的占用的本地成本图障碍物（指定距离（以米为单位）
  obstacle_poses_affected: 15                               # 30 每个障碍物位置都附加到轨迹上最近的姿势以保持距离。
  obstacle_association_force_inclusion_factor: 1.5          # 1.5 非传统障碍物关联策略尝试在优化过程中仅将相关障碍物与离散化轨迹连接起来。但指定距离内的所有障碍物都必须包含在内（作为 min_obstacle_dist 的倍数）。例如。选择 2.0 是为了在 2.0*min_obstacle_dist 的半径内强制考虑障碍物。 (仅当参数legacy_obstacle_association为false时才使用此参数)
  obstacle_association_cutoff_factor: 30.0                  #5.0 超出 [value]*min_obstacle_dist 的倍数时，所有障碍物在优化期间都会被忽略。

  # costmap_converter

  # costmap_converter_plugin: "costmap_converter::CostmapToLinesDBSRANSAC"
  # costmap_converter_plugin: "costmap_converter::CostmapToLinesDBSRANSAC"
  costmap_converter_plugin: ""
  costmap_converter_spin_thread: true                       # 如果设置为 true，costmap 转换器会在不同的线程中调用其回调队列
  costmap_converter_rate: 5                                 # 5.0 定义costmap_converter插件处理当前costmap的频率的速率（该值不应比costmap更新速率高很多

  costmap_converter/CostmapToLinesDBSRANSAC:
    cluster_max_distance: 0.4
    cluster_min_pts: 1
    ransac_inlier_distance: 0.15
    ransac_min_inliers: 10
    ransac_no_iterations: 1500
    ransac_remainig_outliers: 3
    ransac_convert_outlier_pts: True
    ransac_filter_remaining_outlier_pts: False
    convex_hull_min_pt_separation: 0.05

  # Optimization

  no_inner_iterations: 5                     # 5 每次外循环迭代中调用的实际求解器迭代次数。
  no_outer_iterations: 4                     # 4 每次外循环迭代都会根据所需的时间分辨率 dt_ref 自动调整轨迹大小，并调用内部优化器（执行 no_inner_iterations）。因此，每个规划周期中求解器迭代的总数是两个值的乘积
  optimization_activate: true                #
  optimization_verbose: false
  penalty_epsilon: 0.10                      # 0.1 为硬约束近似的惩罚函数添加一个小的安全裕度
  obstacle_cost_exponent: 4
  weight_max_vel_x: 2                        # 2.0 满足最大允许平移速度的优化权重
  weight_max_vel_theta: 1                    # 1.0 满足最大允许角速度的优化权重
  weight_acc_lim_x: 1                        # 1.0 满足最大允许平移加速度的优化权重
  weight_acc_lim_theta: 1                    # 1.0 满足最大允许角加速度的优化权重
  weight_kinematics_nh: 1000                 # 1000 满足非完整运动学的优化权重（该参数必须很高，因为运动学方程构成等式约束，即使值为 1000 也不意味着由于与其他成本相比“原始”成本值较小而导致矩阵条件不好
  weight_kinematics_forward_drive: 75        # 1.0 用于迫使机器人仅选择前进方向（正平移速度）的优化权重。较小的重量（例如 1.0）仍然允许向后行驶。 1000 左右的值几乎可以防止向后行驶（但不能保证)
  weight_kinematics_turning_radius: 1        # 1.0 用于执行最小转弯半径的优化权重（仅适用于车类机器人)
  weight_optimaltime: 1                      # 1.0 用于收缩轨迹与转换/执行时间的优化权重
  weight_shortest_path: 1                    # 
  weight_obstacle: 100                       # 50 优化重量以保持与障碍物的最小距离
  weight_inflation: 2.0                      # 0.1 膨胀惩罚的优化权重（应该使用很小的值）
  weight_dynamic_obstacle: 10
  weight_dynamic_obstacle_inflation: 0.2
  weight_viapoint: 1                         # 1.0 用于最小化到过点（或参考路径）的距离的优化权重
  weight_adapt_factor: 2                     # 2.0 一些特殊权重（当前为weight_obstacle）在每次外部TEB迭代中都会通过该因子重复缩放（weight_new =weight_old*factor）。
                                             # 迭代地增加权重而不是预先设置一个巨大的值会导致底层优化问题的更好的数值条件

  # Homotopy Class Planner

  enable_homotopy_class_planning: True
  enable_multithreading: True
  max_number_classes: 4
  selection_cost_hysteresis: 1.0
  selection_prefer_initial_plan: 0.9
  selection_obst_cost_scale: 100.0
  selection_alternative_time_cost: False

  roadmap_graph_no_samples: 15
  roadmap_graph_area_width: 5
  roadmap_graph_area_length_scale: 1.0
  h_signature_prescaler: 0.5
  h_signature_threshold: 0.1
  obstacle_heading_threshold: 0.45
  switching_blocking_period: 0.0
  viapoints_all_candidates: True
  delete_detours_backwards: True
  max_ratio_detours_duration_best_duration: 3.0
  visualize_hc_graph: False
  visualize_with_time_as_z_axis_scale: False

  # Recovery

  shrink_horizon_backup: True
  shrink_horizon_min_duration: 10
  oscillation_recovery: True
  oscillation_v_eps: 0.1
  oscillation_omega_eps: 0.1
  oscillation_recovery_min_duration: 10
  oscillation_filter_duration: 10
